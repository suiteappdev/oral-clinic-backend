let Sequelize = require("sequelize");

class Producto extends Sequelize.Model {

}

let Init = (app, locals) => {
	locals.models = locals.models || {};
	let sequelize = locals.services.sequelize;

	Producto.init({ 
		codigo: 
			Sequelize.STRING(20)
		,
		ref: 
			Sequelize.STRING(20)
		,
		barras: 
			Sequelize.STRING(15)
		,
		nombre: 
			Sequelize.STRING(200)
		,
		existen: 
			Sequelize.DECIMAL
		,
		costo: 
			Sequelize.DECIMAL
		,
		codg: 
			Sequelize.STRING(3)
		,
		linea: 
			Sequelize.STRING(3)
		,
		grupo: 
			Sequelize.STRING(3)
		,
		sub_Gru: 
			Sequelize.STRING(3)
		,
		costoemp: 
			Sequelize.DECIMAL
		,
		precio: 
			Sequelize.DECIMAL
		,
		precio1: 
			Sequelize.DECIMAL
		,
		precio2: 
			Sequelize.DECIMAL
		,
		precio3: 
			Sequelize.DECIMAL
		,
		precio4: 
			Sequelize.DECIMAL
		,
		precio5: 
			Sequelize.DECIMAL
		,
		precio6: 
			Sequelize.DECIMAL
		,
		precio7: 
			Sequelize.DECIMAL
		,
		precio8: 
			Sequelize.DECIMAL
		,
		precio9: 
			Sequelize.DECIMAL
		,
		dcto_Emp: 
			Sequelize.DECIMAL
		,
		dcto_Ofer: 
			Sequelize.DECIMAL
		,
		dcto_May: 
			Sequelize.DECIMAL
		,
		dcto_Min: 
			Sequelize.DECIMAL
		,
		dcto_Auto: 
			Sequelize.DECIMAL
		,
		provee: 
			Sequelize.STRING(3)
		,
		unidemp: 
			Sequelize.STRING(50)
		,
		cat_Emp: 
			Sequelize.DECIMAL
		,
		presenta: 
			Sequelize.STRING(50)
		,
		stp_Max: 
			Sequelize.DECIMAL
		,
		stp_Min: 
			Sequelize.DECIMAL
		,
		iva: 
			Sequelize.DECIMAL
		,
		ivac: 
			Sequelize.DECIMAL
		,
		peso: 
			Sequelize.DECIMAL
		,
		mat_Pri: 
			Sequelize.INTEGER(4)
		,
		ubica: 
			Sequelize.STRING(50)
		,
		porutil: 
			Sequelize.DECIMAL
		,
		inactivo: 
			Sequelize.INTEGER(4)
		,
		comple: 
			Sequelize.INTEGER(4)
		,
		tempora: 
			Sequelize.STRING(50)
		,
		empaque: 
			Sequelize.INTEGER(4)
		,
		insumo: 
			Sequelize.INTEGER(4)
		,
		servicio: 
			Sequelize.INTEGER(4)
		,
		validar: 
			Sequelize.INTEGER(4)
		,
		cta: 
			Sequelize.STRING(20)
		,
		bodega: 
			Sequelize.STRING(3)
		,
		ccta: 
			Sequelize.STRING(20)
		,
		forma: 
			Sequelize.STRING(30)
		,
		concentra: 
			Sequelize.STRING(30)
		,
		e_Tipo: 
			Sequelize.STRING(2)
		,
		medida: 
			Sequelize.STRING(30)
		,
		icta: 
			Sequelize.STRING(20)
		,
		pp1: 
			Sequelize.DECIMAL
		,
		pp2: 
			Sequelize.DECIMAL
		,
		pp3: 
			Sequelize.DECIMAL
		,
		pp4: 
			Sequelize.DECIMAL
		,
		pp5: 
			Sequelize.DECIMAL
		,
		pp6: 
			Sequelize.DECIMAL
		,
		pp7: 
			Sequelize.DECIMAL
		,
		pp8: 
			Sequelize.DECIMAL
		,
		pp9: 
			Sequelize.DECIMAL
		,
		pp10: 
			Sequelize.DECIMAL
		,
		exp: 
			Sequelize.INTEGER(4)
		,
		cod_Ara: 
			Sequelize.STRING(15)
		,
		imagen: 
			Sequelize.STRING(150)
		,
		controlm: 
			Sequelize.INTEGER(4)
		,
		unid: 
			Sequelize.STRING(10)
		,
		serv: 
			Sequelize.STRING(10)
		,
		pro: 
			Sequelize.STRING(10)
		,
		procd: 
			Sequelize.STRING(10)
		,
		act: 
			Sequelize.STRING(10)
		,
		nombre2: 
			Sequelize.STRING(200)
		,
		id: 
		{type : Sequelize.INTEGER(11),
			allowNull: false,
			field: 'id',
			primaryKey: true}
		,
		imp_Consu: 
			Sequelize.DECIMAL
		,
		invima: 
			Sequelize.STRING(30)
		,
		ctap: 
			Sequelize.STRING(20)
		,
		ictap: 
			Sequelize.STRING(20)
		,
		cctap: 
			Sequelize.STRING(20)
		,
		liqiva: 
			Sequelize.DECIMAL
		,
		g_Terap: 
			Sequelize.STRING(100)
		,
		altocost: 
			Sequelize.INTEGER(4)
		,
		cum: 
			Sequelize.STRING(30)
		,
		pactivo: 
			Sequelize.STRING(254)
		,
		claseriesgo: 
			Sequelize.STRING(254)
		,
		marca: 
			Sequelize.STRING(254)
		,
		manipulacion: 
			Sequelize.STRING(254)
		,
		almacenamiento: 
			Sequelize.STRING(254)
		,
		exento: 
			Sequelize.INTEGER(4)
		,
		ivap: 
			Sequelize.STRING(20)
		,
		ivas: 
			Sequelize.STRING(20)
		,
		desp_Cli: 
			Sequelize.INTEGER(4)
		,
		representa: 
			Sequelize.INTEGER(4)
		,
		porc_Consu: 
			Sequelize.DECIMAL
		,
		hseguimiento: 
			Sequelize.DECIMAL
		,
		dcto_Licencias: 
			Sequelize.DECIMAL
		,
		dcto_Sedes: 
			Sequelize.DECIMAL
		,
		temperatura: 
			Sequelize.DECIMAL
		,
		concepto_Aiu: 
			Sequelize.INTEGER(4)
	}, 
	{ sequelize, modelName: 'producto' });

	locals.models.Producto =  sequelize.models.producto;
}

module.exports = Init;